{"version":3,"sources":["ably.js"],"names":["_ably","_interopRequireDefault","require","ably","Ably","Realtime","process","env","ABLY_API_KEY","channel","channels","get","publishToAbly","event","data","publish","err","console","error","reject","log","concat","resolve"],"mappings":"wGAAA,IAAAA,MAAAC,uBAAAC,QAAA,iFAEA,IAAMC,KAAO,IAAIC,MAAAA,QAAKC,SAASC,QAAQC,IAAIC,cACrCC,QAAUN,KAAKO,SAASC,IAAI,YAO3B,SAASC,cAAcC,EAAOC,GAR/BX,OAAO,IAAIC,QAAAA,SAAAA,EAAKC,GAUdI,QAAQM,QAAQF,EAAOC,EAAM,SAACE,GATtBb,GAWAc,QAAQC,MAAM,oCAAqCF,GATnEG,EAAAH,KAYgBC,QAAQG,IAAR,iDAAAC,OAA6DR,IAC7DS","file":"ably.min.js","sourcesContent":["import Ably from 'ably';\r\n\r\nconst ably = new Ably.Realtime(process.env.ABLY_API_KEY);  // Fetch Ably API key from environment variables\r\nconst channel = ably.channels.get('opinions');  // Use the same 'opinions' channel for all communication\r\n\r\n/**\r\n * Publish a message to the Ably channel\r\n * @param {string} event - The event name, e.g., 'newOpinion', 'editOpinion', or 'deleteOpinion'\r\n * @param {Object} data - The data to send in the event\r\n */\r\nexport function publishToAbly(event, data) {\r\n    return new Promise((resolve, reject) => {\r\n        channel.publish(event, data, (err) => {\r\n            if (err) {\r\n                console.error('Error publishing message to Ably:', err);\r\n                reject(err);\r\n            } else {\r\n                console.log(`Published message to Ably channel with event: ${event}`);\r\n                resolve();\r\n            }\r\n        });\r\n    });\r\n}\r\n"]}